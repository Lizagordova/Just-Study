<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>netcoreapp3.1</TargetFramework>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>client\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="AutoMapper" Version="10.1.1" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.0" />
		<PackageReference Include="Reinforced.Typings" Version="1.5.9" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<Content Include="client\src\styles\common.css" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
		<None Include="client\src\components\Comments\AddComment.tsx" />
		<None Include="client\src\components\Comments\Comments.tsx" />
		<None Include="client\src\components\Comments\ICommentsProps.tsx" />
		<None Include="client\src\components\Main.tsx" />
		<None Include="client\src\components\Main\Main.tsx" />
		<None Include="client\src\components\Main\MainProps.tsx" />
		<None Include="client\src\components\MyWork\IMyTasksProps.tsx" />
		<None Include="client\src\components\MyWork\IMyWorkProps.tsx" />
		<None Include="client\src\components\MyWork\MyTasks.tsx" />
		<None Include="client\src\components\MyWork\MyWork.tsx" />
		<None Include="client\src\components\Projects\AddProject.tsx" />
		<None Include="client\src\components\Projects\AddUserToProject.tsx" />
		<None Include="client\src\components\Projects\IProjectProps.tsx" />
		<None Include="client\src\components\Projects\IProjectsProps.tsx" />
		<None Include="client\src\components\Projects\Project.tsx" />
		<None Include="client\src\components\Projects\Projects.tsx" />
		<None Include="client\src\components\Projects\ProjectsPage.tsx" />
		<None Include="client\src\components\Tasks\AddTask.tsx" />
		<None Include="client\src\components\Tasks\IAddTasksProps.tsx" />
		<None Include="client\src\components\Tasks\ITasksProps.tsx" />
		<None Include="client\src\components\Users\AddUser.tsx" />
		<None Include="client\src\components\Users\IUserProps.tsx" />
		<None Include="client\src\components\Users\IUsersProps.tsx" />
		<None Include="client\src\components\Users\User.tsx" />
		<None Include="client\src\components\Users\Users.tsx" />
		<None Include="client\src\components\Users\UsersPage.tsx" />
		<None Include="client\src\functions\getRoles.tsx" />
		<None Include="client\src\functions\renderSpinner.tsx" />
		<None Include="client\src\stores\CommentsStore.tsx" />
		<None Include="client\src\stores\ProjectStore.tsx" />
		<None Include="client\src\stores\RootStore.tsx" />
		<None Include="client\src\stores\TaskStore.tsx" />
		<None Include="client\src\stores\UserStore.tsx" />
		<None Include="client\stores\CommentStore.tsx" />
		<None Include="client\stores\ProjectStore.tsx" />
		<None Include="client\stores\RootStore.tsx" />
		<None Include="client\stores\TaskStore.tsx" />
		<None Include="client\stores\UserStore.tsx" />
	</ItemGroup>

	<ItemGroup>
	  <ProjectReference Include="..\SuperSoft.Persistence\SuperSoft.Persistence.csproj" />
	</ItemGroup>

	<ItemGroup>
	  <Folder Include="client\src\components\Authorization" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)build\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

</Project>
